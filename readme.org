#+TITLE: Performance comparison of regular expression engines

lang ([[readme-es.org][es]])

the original test environment by *dark100* at
[[http://sljit.sourceforge.net/regex_perf.html][http://sljit.sourceforge.net/regex_perf.html]]

* Introduction

  Processing text or raw byte-sequence are among the common tasks performed by
  most software tools.  These tasks usually involve pattern matching
  algorithms, and the most popular tool for such purpose is regular
  expressions. Regular expressions has been evolved a lot since Kleene defined
  the regular sets in the 1950's. Today we have several widely used regular
  expression engines which have different [[http://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines][features]] which makes any performance
  comparison a difficult task, since a *faster* engine is not necessary
  *better*. Depending on the use case it might be enough to know whether a
  POSIX compatible regular expression matches to a line, even the position of
  the match is unneeded (/grep utility/). On the contrary other use cases
  require the position of capturing brackets, unicode support, conditional and
  atomic block (handling a byte sequence as a single character, like 'sch' in
  German language) support just to name a few. The former case needs a less
  sophisticated algorithm, which is likely be much faster than the latter, but
  again, that does not mean the former is *better*. More about these engine
  types can be found [[http://sljit.sourceforge.net/regex_compare.html][here]].

* Participants

  The following popular engines were choosen:

  - [[http://www.pcre.org/][PCRE2 10.22]]
  - [[https://github.com/laurikari/tre/][tre 0.8.0]]
  - [[http://www.geocities.jp/kosako3/oniguruma/][Oniguruma 6.1.3]]
  - [[https://github.com/google/re2][re2 by Google]]
  - [[http://sljit.sourceforge.net/pcre.html][PCRE2 10.22 with sljit JIT compiler support]]


  and

  - [[https://github.com/nasciiboy/RecursiveRegexpRaptor][regexp3]]
  - [[https://github.com/nasciiboy/RecursiveRegexpRaptor-4][regexp4]]


  Before anyone jump to any conclusions, I should note the followings:

  - The engines were not fine tuned (because of my lack of knowledge about
    their internal workings).  I just compiled them with the default options. I
    know enabling or disabling some features can heavily affect the results. If
    you feel that you have a better configuration just drop me an e-mail and I
    will update the results ([[mailto:nasciiboy@gmail.com]]).

  - The regular expression engines are compiled with =-O3= to allow the best performance.

  - This comparison page was inspired by the work of John Maddock (See his own
    regex comparison [[http://www.boost.org/doc/libs/1_41_0/libs/regex/doc/gcc-performance.html][here]]).  The input is also the same he used before:
    [[http://www.gutenberg.org/files/3200/old/mtent12.zip][mtent12.zip]].  It is a text file (e-book) which size is about 20 Mbytes.

  - Only common patterns are selected, they are not pathological cases nor have
    any PERL specific features. The comparison was caseful.

* Results
** x86-64 bit Intel Cerelon 847 1.1GHz (GCC 6.3.1, GNU/Linux)

   #+BEGIN_HTML
     <table class="results" border="1" width="100%">
     <tr><td class="pattern"><table><tr><td>.|\n</td></tr><tr><td class="raptorPattern">.</td></tr></table></td><td class="time">4578 ms (20045118)</td><td class="time">5297 ms (20045118)</td><td class="time">6438 ms (20045118)</td><td class="time">13048 ms (20045118)</td><td class="time">10503 ms (20045118)</td><td class="time">1086 ms (20045118)</td><td class="time">1465 ms (20045118)</td><td class="time">682 ms (20045118)</td></tr>
     <tr><td class="pattern"><table><tr><td>\d</td></tr><tr><td class="raptorPattern">:d</td></tr></table></td><td class="time">66 ms (27084)</td><td class="time">67 ms (27084)</td><td class="time">1037 ms (27084)</td><td class="time">150 ms (27084)</td><td class="time">150 ms (27084)</td><td class="time">57 ms (27084)</td><td class="time">1388 ms (27084)</td><td class="time">641 ms (27084)</td></tr>
     <tr><td class="pattern"><table><tr><td>\S</td></tr><tr><td class="raptorPattern">:S</td></tr></table></td><td class="time">3036 ms (15451664)</td><td class="time">3136 ms (15451664)</td><td class="time">4538 ms (15451664)</td><td class="time">10213 ms (15451664)</td><td class="time">8173 ms (15451664)</td><td class="time">904 ms (15451664)</td><td class="time">1494 ms (15451664)</td><td class="time">927 ms (15451664)</td></tr>
     <tr><td class="pattern"><table><tr><td>\S+</td></tr><tr><td class="raptorPattern">:S+</td></tr></table></td><td class="time">906 ms (3414592)</td><td class="time">1595 ms (3414592)</td><td class="time">2467 ms (3414592)</td><td class="time">2855 ms (3414592)</td><td class="time">2164 ms (3414592)</td><td class="time">319 ms (3414592)</td><td class="time">1054 ms (3414592)</td><td class="time">718 ms (3414592)</td></tr>
     <tr><td class="pattern"><table><tr><td>\w</td></tr><tr><td class="raptorPattern">:w</td></tr></table></td><td class="time">2928 ms (14751878)</td><td class="time">3031 ms (14751878)</td><td class="time">4603 ms (14751878)</td><td class="time">10355 ms (14751878)</td><td class="time">7809 ms (14751878)</td><td class="time">997 ms (14751878)</td><td class="time">1500 ms (14750958)</td><td class="time">912 ms (14750958)</td></tr>
     <tr><td class="pattern"><table><tr><td>\w</td></tr><tr><td class="raptorPattern">[:w_]</td></tr></table></td><td class="time">2922 ms (14751878)</td><td class="time">3030 ms (14751878)</td><td class="time">4599 ms (14751878)</td><td class="time">10358 ms (14751878)</td><td class="time">7873 ms (14751878)</td><td class="time">945 ms (14751878)</td><td class="time">3159 ms (14751878)</td><td class="time">1278 ms (14751878)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-zA-Z0-9_]</td></tr><tr><td class="raptorPattern">[a-zA-Z0-9_]</td></tr></table></td><td class="time">3057 ms (14751878)</td><td class="time">3202 ms (14751878)</td><td class="time">4610 ms (14751878)</td><td class="time">10222 ms (14751878)</td><td class="time">7761 ms (14751878)</td><td class="time">966 ms (14751878)</td><td class="time">5490 ms (14751878)</td><td class="time">1216 ms (14751878)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-zA-Z]+</td></tr><tr><td class="raptorPattern">[a-zA-Z]+</td></tr></table></td><td class="time">970 ms (3495761)</td><td class="time">1538 ms (3495761)</td><td class="time">2289 ms (3495761)</td><td class="time">2905 ms (3495761)</td><td class="time">2250 ms (3495761)</td><td class="time">333 ms (3495761)</td><td class="time">2756 ms (3495761)</td><td class="time">962 ms (3495761)</td></tr>
     <tr><td class="pattern"><table><tr><td>[.\s]+</td></tr><tr><td class="raptorPattern">[.:s]+</td></tr></table></td><td class="time">925 ms (3430783)</td><td class="time">1048 ms (3430783)</td><td class="time">1922 ms (991813)</td><td class="time">2668 ms (3430783)</td><td class="time">2182 ms (3430783)</td><td class="time">385 ms (3430783)</td><td class="time">3676 ms (3430783)</td><td class="time">1378 ms (3430783)</td></tr>
     <tr><td class="pattern"><table><tr><td>([^\n]+)</td></tr><tr><td class="raptorPattern">&lt;[^\n]+&gt;</td></tr></table></td><td class="time">309 ms (314387)</td><td class="time">1179 ms (314387)</td><td class="time">1501 ms (314387)</td><td class="time">727 ms (314387)</td><td class="time">492 ms (314387)</td><td class="time">88 ms (314387)</td><td class="time">1028 ms (314387)</td><td class="time">577 ms (314387)</td></tr>
     <tr><td class="pattern"><table><tr><td>e</td></tr><tr><td class="raptorPattern">e</td></tr></table></td><td class="time">364 ms (1781425)</td><td class="time">456 ms (1781425)</td><td class="time">499 ms (1781425)</td><td class="time">1390 ms (1781425)</td><td class="time">993 ms (1781425)</td><td class="time">136 ms (1781425)</td><td class="time">1555 ms (1781425)</td><td class="time">698 ms (1781425)</td></tr>
     <tr><td class="pattern"><table><tr><td>(((((e)))))</td></tr><tr><td class="raptorPattern">&lt;&lt;&lt;&lt;&lt;e&gt;&gt;&gt;&gt;&gt;</td></tr></table></td><td class="time">1187 ms (1781425)</td><td class="time">1123 ms (1781425)</td><td class="time">493 ms (1781425)</td><td class="time">1883 ms (1781425)</td><td class="time">1005 ms (1781425)</td><td class="time">203 ms (1781425)</td><td class="time">17275 ms (1781425)</td><td class="time">2255 ms (1781425)</td></tr>
     <tr><td class="pattern"><table><tr><td>((((((((((e))))))))))</td></tr><tr><td class="raptorPattern">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;e&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</td></tr></table></td><td class="time">1909 ms (1781425)</td><td class="time">1685 ms (1781425)</td><td class="time">492 ms (1781425)</td><td class="time">2137 ms (1781425)</td><td class="time">993 ms (1781425)</td><td class="time">292 ms (1781425)</td><td class="time">48426 ms (1781425)</td><td class="time">3812 ms (1781425)</td></tr>
     <tr><td class="pattern"><table><tr><td>Twain</td></tr><tr><td class="raptorPattern">Twain</td></tr></table></td><td class="time">10 ms (2388)</td><td class="time">48 ms (2388)</td><td class="time">1000 ms (2388)</td><td class="time">54 ms (2388)</td><td class="time">8 ms (2388)</td><td class="time">50 ms (2388)</td><td class="time">2605 ms (2388)</td><td class="time">605 ms (2388)</td></tr>
     <tr><td class="pattern"><table><tr><td>(Twain)</td></tr><tr><td class="raptorPattern">&lt;Twain&gt;</td></tr></table></td><td class="time">14 ms (2388)</td><td class="time">49 ms (2388)</td><td class="time">990 ms (2388)</td><td class="time">54 ms (2388)</td><td class="time">8 ms (2388)</td><td class="time">50 ms (2388)</td><td class="time">5596 ms (2388)</td><td class="time">942 ms (2388)</td></tr>
     <tr><td class="pattern"><table><tr><td>(?i)Twain</td></tr><tr><td class="raptorPattern">#*Twain</td></tr></table></td><td class="time">193 ms (2657)</td><td class="time">286 ms (2657)</td><td class="time">1270 ms (2657)</td><td class="time">417 ms (2657)</td><td class="time">178 ms (2657)</td><td class="time">52 ms (2657)</td><td class="time">2736 ms (2657)</td><td class="time">785 ms (2657)</td></tr>
     <tr><td class="pattern"><table><tr><td>((T|t)([wW])(a|A)i?I?([nN]))</td></tr><tr><td class="raptorPattern">&lt;&lt;T|t&gt;&lt;[wW]&gt;&lt;a|A&gt;i?I?&lt;[nN]&gt;&gt;</td></tr></table></td><td class="time">578 ms (2658)</td><td class="time">458 ms (2658)</td><td class="time">1745 ms (2658)</td><td class="time">365 ms (2658)</td><td class="time">179 ms (2658)</td><td class="time">77 ms (2658)</td><td class="time">17253 ms (2658)</td><td class="time">2356 ms (2658)</td></tr>
     <tr><td class="pattern"><table><tr><td>(T+([w]?(a{1}(i+(n*))))){1}</td></tr><tr><td class="raptorPattern">&lt;T+&lt;[w]?&lt;a{1}&lt;i+&lt;n*&gt;&gt;&gt;&gt;&gt;{1}</td></tr></table></td><td class="time">25 ms (2419)</td><td class="time">62 ms (2419)</td><td class="time">1181 ms (2419)</td><td class="time">161 ms (2419)</td><td class="time">8 ms (2419)</td><td class="time">7 ms (2419)</td><td class="time">12576 ms (2419)</td><td class="time">949 ms (2419)</td></tr>
     <tr><td class="pattern"><table><tr><td>(?:T+(?:[w]?(?:a{1}(?:i+(?:n*))))){1}</td></tr><tr><td class="raptorPattern">(T+([w]?(a{1}(i+(n*))))){1}</td></tr></table></td><td class="time">21 ms (2419)</td><td class="time">62 ms (2419)</td><td class="time">1166 ms (2419)</td><td class="time">162 ms (2419)</td><td class="time">8 ms (2419)</td><td class="time">6 ms (2419)</td><td class="time">13331 ms (2419)</td><td class="time">885 ms (2419)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-z]shing</td></tr><tr><td class="raptorPattern">[a-z]shing</td></tr></table></td><td class="time">1476 ms (1877)</td><td class="time">2300 ms (1877)</td><td class="time">1592 ms (1877)</td><td class="time">50 ms (1877)</td><td class="time">286 ms (1877)</td><td class="time">48 ms (1877)</td><td class="time">5287 ms (1877)</td><td class="time">1350 ms (1877)</td></tr>
     <tr><td class="pattern"><table><tr><td>Huck[a-zA-Z]+|Saw[a-zA-Z]+</td></tr><tr><td class="raptorPattern">Huck[a-zA-Z]+|Saw[a-zA-Z]+</td></tr></table></td><td class="time">70 ms (396)</td><td class="time">76 ms (396)</td><td class="time">1561 ms (396)</td><td class="time">139 ms (396)</td><td class="time">137 ms (396)</td><td class="time">8 ms (396)</td><td class="time">7754 ms (396)</td><td class="time">1485 ms (396)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-q][^u-z]{13}x</td></tr><tr><td class="raptorPattern">[a-q][^u-z]{13}x</td></tr></table></td><td class="time">1738 ms (4929)</td><td class="time">6363 ms (4929)</td><td class="time">4466 ms (4929)</td><td class="time">157 ms (4929)</td><td class="time">587 ms (4929)</td><td class="time">5 ms (4929)</td><td class="time">9947 ms (4929)</td><td class="time">3846 ms (4929)</td></tr>
     <tr><td class="pattern"><table><tr><td>Tom|Sawyer|Huckleberry|Finn</td></tr><tr><td class="raptorPattern">Tom|Sawyer|Huckleberry|Finn</td></tr></table></td><td class="time">95 ms (3015)</td><td class="time">100 ms (3015)</td><td class="time">2742 ms (3015)</td><td class="time">161 ms (3015)</td><td class="time">141 ms (3015)</td><td class="time">84 ms (3015)</td><td class="time">11273 ms (3015)</td><td class="time">2673 ms (3015)</td></tr>
     <tr><td class="pattern"><table><tr><td>(Tom|Sawyer|Huckleberry|Finn)</td></tr><tr><td class="raptorPattern">&lt;Tom|Sawyer|Huckleberry|Finn&gt;</td></tr></table></td><td class="time">101 ms (3015)</td><td class="time">103 ms (3015)</td><td class="time">2777 ms (3015)</td><td class="time">162 ms (3015)</td><td class="time">141 ms (3015)</td><td class="time">83 ms (3015)</td><td class="time">20004 ms (3015)</td><td class="time">3021 ms (3015)</td></tr>
     <tr><td class="pattern"><table><tr><td>[hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo]</td></tr><tr><td class="raptorPattern">[hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo]</td></tr></table></td><td class="time">633 ms (534)</td><td class="time">879 ms (534)</td><td class="time">2939 ms (534)</td><td class="time">689 ms (534)</td><td class="time">262 ms (534)</td><td class="time">241 ms (534)</td><td class="time">11237 ms (534)</td><td class="time">1582 ms (534)</td></tr>
     <tr><td class="pattern"><table><tr><td>Tom.{10,25}river|river.{10,25}Tom</td></tr><tr><td class="raptorPattern">Tom(river|\n){10,25}#!river|river(Tom|\n){10,25}#!Tom</td></tr></table></td><td class="time">203 ms (2)</td><td class="time">248 ms (2)</td><td class="time">1754 ms (2)</td><td class="time">251 ms (2)</td><td class="time">254 ms (2)</td><td class="time">45 ms (2)</td><td class="time">14594 ms (2)</td><td class="time">1522 ms (2)</td></tr>
     <tr><td class="pattern"><table><tr><td>ing[^a-zA-Z]</td></tr><tr><td class="raptorPattern">ing[^a-zA-Z]</td></tr></table></td><td class="time">143 ms (85956)</td><td class="time">243 ms (85956)</td><td class="time">1138 ms (85956)</td><td class="time">140 ms (85956)</td><td class="time">111 ms (85956)</td><td class="time">54 ms (85956)</td><td class="time">3199 ms (85956)</td><td class="time">652 ms (85956)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-zA-Z]ing[^a-zA-Z]</td></tr><tr><td class="raptorPattern">[a-zA-Z]ing[^a-zA-Z]</td></tr></table></td><td class="time">1551 ms (85823)</td><td class="time">2365 ms (85823)</td><td class="time">1794 ms (85823)</td><td class="time">142 ms (85823)</td><td class="time">330 ms (85823)</td><td class="time">57 ms (85823)</td><td class="time">6675 ms (85823)</td><td class="time">1410 ms (85823)</td></tr>
     <tr><td class="pattern"><table><tr><td>([a-zA-Z]+ing)</td></tr><tr><td class="raptorPattern">&lt;(ing|:A)+#!ing((ing|:A)*#!ing)*&gt;</td></tr></table></td><td class="time">4017 ms (95863)</td><td class="time">5382 ms (95863)</td><td class="time">2074 ms (95863)</td><td class="time">3036 ms (95863)</td><td class="time">341 ms (95863)</td><td class="time">223 ms (95863)</td><td class="time">26227 ms (95863)</td><td class="time">6501 ms (95863)</td></tr>
     </tbody></table>
   #+END_HTML

   Just Donwload, type =make=. and run =runtest=.
