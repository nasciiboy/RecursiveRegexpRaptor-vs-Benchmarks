#+TITLE: Comparacion del Rendimiento de Morotes de Expresiones Regulares

lang ([[readme.org][en]])

Esta prueba es un derivado del entorno creado por *dark100* puedes consultar el
trabajo original en [[http://sljit.sourceforge.net/regex_perf.html][http://sljit.sourceforge.net/regex_perf.html]]

* Introduccion

  El procesamiento de texto en bruto byte a byte, es una de las tareas mas
  comunmente realizadas por la mayoría de las herramientas de software. Dentro
  de estas tareas se suelen incluir algoritmos de busqueda de patrones, y la
  herramienta más popular para tal fin son las expresiones regulares. Las
  expresiones regulares han evolucionado mucho desde que Kleene definio los
  conjuntos regulares en la década de 1950. Hoy en día tenemos varios motores de
  expresiones regulares ampliamente usados ​​que tienen distintas [[http://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines][caracteristicas]]
  que vuelven cualquier comparación de rendimiento una tarea difícil, ya que un
  motor veloz no es necesariamente *mejor*. Dependiendo del caso de uso podría
  ser suficiente conocer si es compatible con expresiones regulares POSIX para
  buscar una linea, incluso la posicion de la coincidencia es innecesaria
  (/utilidad grep/). En los demás casos cuando el uso requiere el soporte para
  la posición de captura, compatibilidad con unicode, bloque condicional y
  manipulación atómica (una secuencia de bytes como un único carácter, como
  'sch' en alemán). El primer caso necesita un algoritmo de menos sofisticado,
  que probablemente sea mucho más rápido que el segundo, pero de nuevo, eso no
  quiere decir que el primero es *mejor*. Puede encontrar más información sobre
  este tipo de motores [[http://sljit.sourceforge.net/regex_compare.html][aqui]].

* Participantes

  Los motores populores eligidos fueron:

  - [[http://www.pcre.org/][PCRE2 10.22]]
  - [[https://github.com/laurikari/tre/][tre 0.8.0]]
  - [[http://www.geocities.jp/kosako3/oniguruma/][Oniguruma 6.1.3]]
  - [[https://github.com/google/re2][re2 by Google]]
  - [[http://sljit.sourceforge.net/pcre.html][PCRE2 10.22 with sljit JIT compiler support]]


  y

  - [[https://github.com/nasciiboy/RecursiveRegexpRaptor][regexp3]]
  - [[https://github.com/nasciiboy/RecursiveRegexpRaptor-4][regexp4]]


  Antes de que nadie llegue a ninguna conclusion, debo señalar lo siguiente:

  - Los motores no estaban afinados (debido a mi falta de conocimiento sobre su
    funcionamiento interno, a excepcion de los mios regexp(3|4)). Solo los he
    compilado con las opciones predeterminadas. Si usted tiene una mejor
    configuracion por fabor enviemela y actualizare los resultados
    ([[mailto:nasciiboy@gmail]]).

  - Los motores estan compilados con la opcion =-O3= para un mejor rendimiento.

  - Esta comparacion esta inspirada en el trabajo de John Maddock (mira su
    comparacion [[http://www.boost.org/doc/libs/1_41_0/libs/regex/doc/gcc-performance.html][aqui]]). Los datos de entrada tambien son los mismos que el
    utilizo [[http://www.gutenberg.org/files/3200/old/mtent12.zip][mtent12.zip]]. Es un archivo de texto (e-book) con un tamaño alrededor
    de 20 Mbytes.

  - Solamente fueron seleccionados patrones comunes, no son casos patologicos ni
    tienen ninguna de las cualidades de Perl (regexp(3|4) solo cumplen casos
    regexp).

* Resultados
** x86-64 bit Intel Cerelon 847 1.1GHz (GCC 6.3.1, GNU/Linux)

   #+BEGIN_HTML
     <table class="results" border="1" width="100%">
     <tbody><tr><th>Regular expression</th><th>PCRE</th><th>PCRE<br>-DFA</th><th>TRE</th><th>Onig-<br>uruma</th><th>RE2</th><th>PCRE<br>-JIT</th><th class="raptor3">regexp3</th><th class="raptor4">regexp4</th></tr>
     <tr><td class="pattern"><table><tr><td>.|\n</td></tr><tr><td class="raptorPattern">.</td></tr></table></td><td class="time">4526 ms (20045118)</td><td class="time">5305 ms (20045118)</td><td class="time">6513 ms (20045118)</td><td class="time">13005 ms (20045118)</td><td class="time">10611 ms (20045118)</td><td class="time">1090 ms (20045118)</td><td class="time">1409 ms (20045118)</td><td class="time">750 ms (20045118)</td></tr>
     <tr><td class="pattern"><table><tr><td>\d</td></tr><tr><td class="raptorPattern">:d</td></tr></table></td><td class="time">66 ms (27084)</td><td class="time">67 ms (27084)</td><td class="time">1035 ms (27084)</td><td class="time">150 ms (27084)</td><td class="time">150 ms (27084)</td><td class="time">57 ms (27084)</td><td class="time">1351 ms (27084)</td><td class="time">616 ms (27084)</td></tr>
     <tr><td class="pattern"><table><tr><td>\S</td></tr><tr><td class="raptorPattern">:S</td></tr></table></td><td class="time">3021 ms (15451664)</td><td class="time">3138 ms (15451664)</td><td class="time">4543 ms (15451664)</td><td class="time">10150 ms (15451664)</td><td class="time">8326 ms (15451664)</td><td class="time">901 ms (15451664)</td><td class="time">1460 ms (15451664)</td><td class="time">955 ms (15451664)</td></tr>
     <tr><td class="pattern"><table><tr><td>\S+</td></tr><tr><td class="raptorPattern">:S+</td></tr></table></td><td class="time">903 ms (3414592)</td><td class="time">1589 ms (3414592)</td><td class="time">2458 ms (3414592)</td><td class="time">2862 ms (3414592)</td><td class="time">2177 ms (3414592)</td><td class="time">323 ms (3414592)</td><td class="time">1062 ms (3414592)</td><td class="time">715 ms (3414592)</td></tr>
     <tr><td class="pattern"><table><tr><td>\w</td></tr><tr><td class="raptorPattern">:w</td></tr></table></td><td class="time">2908 ms (14751878)</td><td class="time">3034 ms (14751878)</td><td class="time">4614 ms (14751878)</td><td class="time">10346 ms (14751878)</td><td class="time">7866 ms (14751878)</td><td class="time">947 ms (14751878)</td><td class="time">1456 ms (14750958)</td><td class="time">946 ms (14750958)</td></tr>
     <tr><td class="pattern"><table><tr><td>\w</td></tr><tr><td class="raptorPattern">[:w_]</td></tr></table></td><td class="time">2908 ms (14751878)</td><td class="time">3040 ms (14751878)</td><td class="time">4585 ms (14751878)</td><td class="time">10341 ms (14751878)</td><td class="time">7922 ms (14751878)</td><td class="time">948 ms (14751878)</td><td class="time">3129 ms (14751878)</td><td class="time">1298 ms (14751878)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-zA-Z0-9_]</td></tr><tr><td class="raptorPattern">[a-zA-Z0-9_]</td></tr></table></td><td class="time">3042 ms (14751878)</td><td class="time">3205 ms (14751878)</td><td class="time">4632 ms (14751878)</td><td class="time">10211 ms (14751878)</td><td class="time">7977 ms (14751878)</td><td class="time">966 ms (14751878)</td><td class="time">5619 ms (14751878)</td><td class="time">1205 ms (14751878)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-zA-Z]+</td></tr><tr><td class="raptorPattern">[a-zA-Z]+</td></tr></table></td><td class="time">968 ms (3495761)</td><td class="time">1538 ms (3495761)</td><td class="time">2290 ms (3495761)</td><td class="time">2905 ms (3495761)</td><td class="time">2326 ms (3495761)</td><td class="time">332 ms (3495761)</td><td class="time">2722 ms (3495761)</td><td class="time">898 ms (3495761)</td></tr>
     <tr><td class="pattern"><table><tr><td>[.\s]+</td></tr><tr><td class="raptorPattern">[.:s]+</td></tr></table></td><td class="time">910 ms (3430783)</td><td class="time">1044 ms (3430783)</td><td class="time">1901 ms (991813)</td><td class="time">2675 ms (3430783)</td><td class="time">2217 ms (3430783)</td><td class="time">388 ms (3430783)</td><td class="time">3610 ms (3430783)</td><td class="time">1393 ms (3430783)</td></tr>
     <tr><td class="pattern"><table><tr><td>([^\n]+)</td></tr><tr><td class="raptorPattern">&lt;[^\n]+&gt;</td></tr></table></td><td class="time">312 ms (314387)</td><td class="time">1177 ms (314387)</td><td class="time">1511 ms (314387)</td><td class="time">713 ms (314387)</td><td class="time">477 ms (314387)</td><td class="time">87 ms (314387)</td><td class="time">989 ms (314387)</td><td class="time">596 ms (314387)</td></tr>
     <tr><td class="pattern"><table><tr><td>e</td></tr><tr><td class="raptorPattern">e</td></tr></table></td><td class="time">360 ms (1781425)</td><td class="time">452 ms (1781425)</td><td class="time">496 ms (1781425)</td><td class="time">1377 ms (1781425)</td><td class="time">1004 ms (1781425)</td><td class="time">140 ms (1781425)</td><td class="time">1496 ms (1781425)</td><td class="time">702 ms (1781425)</td></tr>
     <tr><td class="pattern"><table><tr><td>(((((e)))))</td></tr><tr><td class="raptorPattern">&lt;&lt;&lt;&lt;&lt;e&gt;&gt;&gt;&gt;&gt;</td></tr></table></td><td class="time">1208 ms (1781425)</td><td class="time">1167 ms (1781425)</td><td class="time">486 ms (1781425)</td><td class="time">1870 ms (1781425)</td><td class="time">1005 ms (1781425)</td><td class="time">211 ms (1781425)</td><td class="time">16923 ms (1781425)</td><td class="time">3483 ms (1781425)</td></tr>
     <tr><td class="pattern"><table><tr><td>((((((((((e))))))))))</td></tr><tr><td class="raptorPattern">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;e&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</td></tr></table></td><td class="time">1892 ms (1781425)</td><td class="time">1697 ms (1781425)</td><td class="time">487 ms (1781425)</td><td class="time">2136 ms (1781425)</td><td class="time">1009 ms (1781425)</td><td class="time">288 ms (1781425)</td><td class="time">48457 ms (1781425)</td><td class="time">5143 ms (1781425)</td></tr>
     <tr><td class="pattern"><table><tr><td>Twain</td></tr><tr><td class="raptorPattern">Twain</td></tr></table></td><td class="time">10 ms (2388)</td><td class="time">48 ms (2388)</td><td class="time">1010 ms (2388)</td><td class="time">54 ms (2388)</td><td class="time">8 ms (2388)</td><td class="time">50 ms (2388)</td><td class="time">2471 ms (2388)</td><td class="time">613 ms (2388)</td></tr>
     <tr><td class="pattern"><table><tr><td>(Twain)</td></tr><tr><td class="raptorPattern">&lt;Twain&gt;</td></tr></table></td><td class="time">14 ms (2388)</td><td class="time">49 ms (2388)</td><td class="time">992 ms (2388)</td><td class="time">54 ms (2388)</td><td class="time">8 ms (2388)</td><td class="time">50 ms (2388)</td><td class="time">5425 ms (2388)</td><td class="time">998 ms (2388)</td></tr>
     <tr><td class="pattern"><table><tr><td>(?i)Twain</td></tr><tr><td class="raptorPattern">#*Twain</td></tr></table></td><td class="time">192 ms (2657)</td><td class="time">286 ms (2657)</td><td class="time">1255 ms (2657)</td><td class="time">418 ms (2657)</td><td class="time">176 ms (2657)</td><td class="time">52 ms (2657)</td><td class="time">2591 ms (2657)</td><td class="time">779 ms (2657)</td></tr>
     <tr><td class="pattern"><table><tr><td>((T|t)([wW])(a|A)i?I?([nN]))</td></tr><tr><td class="raptorPattern">&lt;&lt;T|t&gt;&lt;[wW]&gt;&lt;a|A&gt;i?I?&lt;[nN]&gt;&gt;</td></tr></table></td><td class="time">579 ms (2658)</td><td class="time">457 ms (2658)</td><td class="time">1753 ms (2658)</td><td class="time">364 ms (2658)</td><td class="time">175 ms (2658)</td><td class="time">76 ms (2658)</td><td class="time">16992 ms (2658)</td><td class="time">2492 ms (2658)</td></tr>
     <tr><td class="pattern"><table><tr><td>(T+([w]?(a{1}(i+(n*))))){1}</td></tr><tr><td class="raptorPattern">&lt;T+&lt;[w]?&lt;a{1}&lt;i+&lt;n*&gt;&gt;&gt;&gt;&gt;{1}</td></tr></table></td><td class="time">25 ms (2419)</td><td class="time">62 ms (2419)</td><td class="time">1176 ms (2419)</td><td class="time">161 ms (2419)</td><td class="time">8 ms (2419)</td><td class="time">7 ms (2419)</td><td class="time">12414 ms (2419)</td><td class="time">1023 ms (2419)</td></tr>
     <tr><td class="pattern"><table><tr><td>(?:T+(?:[w]?(?:a{1}(?:i+(?:n*))))){1}</td></tr><tr><td class="raptorPattern">(T+([w]?(a{1}(i+(n*))))){1}</td></tr></table></td><td class="time">21 ms (2419)</td><td class="time">62 ms (2419)</td><td class="time">1159 ms (2419)</td><td class="time">162 ms (2419)</td><td class="time">8 ms (2419)</td><td class="time">7 ms (2419)</td><td class="time">12761 ms (2419)</td><td class="time">941 ms (2419)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-z]shing</td></tr><tr><td class="raptorPattern">[a-z]shing</td></tr></table></td><td class="time">1455 ms (1877)</td><td class="time">2303 ms (1877)</td><td class="time">1599 ms (1877)</td><td class="time">51 ms (1877)</td><td class="time">284 ms (1877)</td><td class="time">48 ms (1877)</td><td class="time">5209 ms (1877)</td><td class="time">1318 ms (1877)</td></tr>
     <tr><td class="pattern"><table><tr><td>Huck[a-zA-Z]+|Saw[a-zA-Z]+</td></tr><tr><td class="raptorPattern">Huck[a-zA-Z]+|Saw[a-zA-Z]+</td></tr></table></td><td class="time">71 ms (396)</td><td class="time">75 ms (396)</td><td class="time">1560 ms (396)</td><td class="time">139 ms (396)</td><td class="time">137 ms (396)</td><td class="time">8 ms (396)</td><td class="time">6499 ms (396)</td><td class="time">1555 ms (396)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-q][^u-z]{13}x</td></tr><tr><td class="raptorPattern">[a-q][^u-z]{13}x</td></tr></table></td><td class="time">1735 ms (4929)</td><td class="time">6367 ms (4929)</td><td class="time">4402 ms (4929)</td><td class="time">157 ms (4929)</td><td class="time">583 ms (4929)</td><td class="time">5 ms (4929)</td><td class="time">9890 ms (4929)</td><td class="time">3607 ms (4929)</td></tr>
     <tr><td class="pattern"><table><tr><td>Tom|Sawyer|Huckleberry|Finn</td></tr><tr><td class="raptorPattern">Tom|Sawyer|Huckleberry|Finn</td></tr></table></td><td class="time">96 ms (3015)</td><td class="time">101 ms (3015)</td><td class="time">2771 ms (3015)</td><td class="time">162 ms (3015)</td><td class="time">142 ms (3015)</td><td class="time">84 ms (3015)</td><td class="time">10794 ms (3015)</td><td class="time">2809 ms (3015)</td></tr>
     <tr><td class="pattern"><table><tr><td>(Tom|Sawyer|Huckleberry|Finn)</td></tr><tr><td class="raptorPattern">&lt;Tom|Sawyer|Huckleberry|Finn&gt;</td></tr></table></td><td class="time">103 ms (3015)</td><td class="time">104 ms (3015)</td><td class="time">2773 ms (3015)</td><td class="time">165 ms (3015)</td><td class="time">142 ms (3015)</td><td class="time">84 ms (3015)</td><td class="time">19548 ms (3015)</td><td class="time">3164 ms (3015)</td></tr>
     <tr><td class="pattern"><table><tr><td>[hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo]</td></tr><tr><td class="raptorPattern">[hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo]</td></tr></table></td><td class="time">630 ms (534)</td><td class="time">879 ms (534)</td><td class="time">2924 ms (534)</td><td class="time">691 ms (534)</td><td class="time">258 ms (534)</td><td class="time">241 ms (534)</td><td class="time">11311 ms (534)</td><td class="time">1588 ms (534)</td></tr>
     <tr><td class="pattern"><table><tr><td>Tom.{10,25}river|river.{10,25}Tom</td></tr><tr><td class="raptorPattern">Tom(river|\n){10,25}#!river|river(Tom|\n){10,25}#!Tom</td></tr></table></td><td class="time">204 ms (2)</td><td class="time">248 ms (2)</td><td class="time">1763 ms (2)</td><td class="time">251 ms (2)</td><td class="time">218 ms (2)</td><td class="time">45 ms (2)</td><td class="time">12207 ms (2)</td><td class="time">1601 ms (2)</td></tr>
     <tr><td class="pattern"><table><tr><td>ing[^a-zA-Z]</td></tr><tr><td class="raptorPattern">ing[^a-zA-Z]</td></tr></table></td><td class="time">142 ms (85956)</td><td class="time">242 ms (85956)</td><td class="time">1143 ms (85956)</td><td class="time">139 ms (85956)</td><td class="time">112 ms (85956)</td><td class="time">54 ms (85956)</td><td class="time">3091 ms (85956)</td><td class="time">657 ms (85956)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-zA-Z]ing[^a-zA-Z]</td></tr><tr><td class="raptorPattern">[a-zA-Z]ing[^a-zA-Z]</td></tr></table></td><td class="time">1505 ms (85823)</td><td class="time">2372 ms (85823)</td><td class="time">1800 ms (85823)</td><td class="time">142 ms (85823)</td><td class="time">327 ms (85823)</td><td class="time">57 ms (85823)</td><td class="time">6706 ms (85823)</td><td class="time">1375 ms (85823)</td></tr>
     <tr><td class="pattern"><table><tr><td>([a-zA-Z]+ing)</td></tr><tr><td class="raptorPattern">&lt;(ing|:A)+#!ing((ing|:A)*#!ing)*&gt;</td></tr></table></td><td class="time">3993 ms (95863)</td><td class="time">5392 ms (95863)</td><td class="time">2068 ms (95863)</td><td class="time">3004 ms (95863)</td><td class="time">338 ms (95863)</td><td class="time">222 ms (95863)</td><td class="time">26810 ms (95863)</td><td class="time">7039 ms (95863)</td></tr>
     </tbody></table>
   #+END_HTML

   Para realizar la prueba solo descarga o clona este repositor, abre un
   terminal, ejecuta =make=. y luego =runtest=. (Puedes enviarme tu resultado,
   con informacion del equipo, tu mail y un nick).
