#+TITLE: Comparacion del Rendimiento de Morotes de Expresiones Regulares

lang ([[readme.org][en]])

Esta prueba es un derivado del entorno creado por *dark100* puedes consultar el
trabajo original en [[http://sljit.sourceforge.net/regex_perf.html][http://sljit.sourceforge.net/regex_perf.html]]

* Introduccion

  El procesamiento de texto en bruto byte a byte, es una de las tareas mas
  comunmente realizadas por la mayoría de las herramientas de software. Dentro
  de estas tareas se suelen incluir algoritmos de busqueda de patrones, y la
  herramienta más popular para tal fin son las expresiones regulares. Las
  expresiones regulares han evolucionado mucho desde que Kleene definio los
  conjuntos regulares en la década de 1950. Hoy en día tenemos varios motores de
  expresiones regulares ampliamente usados ​​que tienen distintas [[http://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines][caracteristicas]]
  que vuelven cualquier comparación de rendimiento una tarea difícil, ya que un
  motor veloz no es necesariamente *mejor*. Dependiendo del caso de uso podría
  ser suficiente conocer si es compatible con expresiones regulares POSIX para
  buscar una linea, incluso la posicion de la coincidencia es innecesaria
  (/utilidad grep/). En los demás casos cuando el uso requiere el soporte para
  la posición de captura, compatibilidad con unicode, bloque condicional y
  manipulación atómica (una secuencia de bytes como un único carácter, como
  'sch' en alemán). El primer caso necesita un algoritmo de menos sofisticado,
  que probablemente sea mucho más rápido que el segundo, pero de nuevo, eso no
  quiere decir que el primero es *mejor*. Puede encontrar más información sobre
  este tipo de motores [[http://sljit.sourceforge.net/regex_compare.html][aqui]].

* Participantes

  Los motores populores eligidos fueron:

  - [[http://www.pcre.org/][PCRE2 10.22]]
  - [[https://github.com/laurikari/tre/][tre 0.8.0]]
  - [[http://www.geocities.jp/kosako3/oniguruma/][Oniguruma 6.1.3]]
  - [[https://github.com/google/re2][re2 by Google]]
  - [[http://sljit.sourceforge.net/pcre.html][PCRE2 10.22 with sljit JIT compiler support]]


  y

  - [[https://github.com/nasciiboy/RecursiveRegexpRaptor][regexp3]]
  - [[https://github.com/nasciiboy/RecursiveRegexpRaptor-4][regexp4]]


  Antes de que nadie llegue a ninguna conclusion, debo señalar lo siguiente:

  - Los motores no estaban afinados (debido a mi falta de conocimiento sobre su
    funcionamiento interno, a excepcion de los mios regexp(3|4)). Solo los he
    compilado con las opciones predeterminadas. Si usted tiene una mejor
    configuracion por fabor enviemela y actualizare los resultados
    ([[mailto:nasciiboy@gmail]]).

  - Los motores estan compilados con la opcion =-O3= para un mejor rendimiento.

  - Esta comparacion esta inspirada en el trabajo de John Maddock (mira su
    comparacion [[http://www.boost.org/doc/libs/1_41_0/libs/regex/doc/gcc-performance.html][aqui]]). Los datos de entrada tambien son los mismos que el
    utilizo [[http://www.gutenberg.org/files/3200/old/mtent12.zip][mtent12.zip]]. Es un archivo de texto (e-book) con un tamaño alrededor
    de 20 Mbytes.

  - Solamente fueron seleccionados patrones comunes, no son casos patologicos ni
    tienen ninguna de las cualidades de Perl (regexp(3|4) solo cumplen casos
    regexp).

* Resultados
** x86-64 bit Intel Cerelon 847 1.1GHz (GCC 6.3.1, GNU/Linux)

   #+BEGIN_HTML
     <table class="results" border="1" width="100%">
     <tbody><tr><th>Regular expression</th><th>PCRE</th><th>PCRE<br>-DFA</th><th>TRE</th><th>Onig-<br>uruma</th><th>RE2</th><th>PCRE<br>-JIT</th><th class="raptor3">regexp3</th><th class="raptor4">regexp4</th></tr>
     <tr><td class="pattern"><table><tr><td>.|\n</td></tr><tr><td class="raptor3-pattern">.</td></tr></table></td><td class="time">4514 ms (20045118)</td><td class="time">5320 ms (20045118)</td><td class="time">6500 ms (20045118)</td><td class="time">13378 ms (20045118)</td><td class="time">10619 ms (20045118)</td><td class="time">1086 ms (20045118)</td><td class="time">1768 ms (20045118)</td><td class="time">748 ms (20045118)</td></tr>
     <tr><td class="pattern"><table><tr><td>\w</td></tr><tr><td class="raptor3-pattern">:w</td></tr></table></td><td class="time">3893 ms (14751878)</td><td class="time">3026 ms (14751878)</td><td class="time">4604 ms (14751878)</td><td class="time">10947 ms (14751878)</td><td class="time">7967 ms (14751878)</td><td class="time">944 ms (14751878)</td><td class="time">1836 ms (14750958)</td><td class="time">941 ms (14750958)</td></tr>
     <tr><td class="pattern"><table><tr><td>\d</td></tr><tr><td class="raptor3-pattern">:d</td></tr></table></td><td class="time">65 ms (27084)</td><td class="time">67 ms (27084)</td><td class="time">1036 ms (27084)</td><td class="time">150 ms (27084)</td><td class="time">153 ms (27084)</td><td class="time">57 ms (27084)</td><td class="time">1807 ms (27084)</td><td class="time">608 ms (27084)</td></tr>
     <tr><td class="pattern"><table><tr><td>\S</td></tr><tr><td class="raptor3-pattern">:S</td></tr></table></td><td class="time">3023 ms (15451664)</td><td class="time">3130 ms (15451664)</td><td class="time">4533 ms (15451664)</td><td class="time">10776 ms (15451664)</td><td class="time">8273 ms (15451664)</td><td class="time">902 ms (15451664)</td><td class="time">1846 ms (15451664)</td><td class="time">958 ms (15451664)</td></tr>
     <tr><td class="pattern"><table><tr><td>\S+</td></tr><tr><td class="raptor3-pattern">:S+</td></tr></table></td><td class="time">918 ms (3414592)</td><td class="time">1587 ms (3414592)</td><td class="time">2462 ms (3414592)</td><td class="time">3019 ms (3414592)</td><td class="time">2183 ms (3414592)</td><td class="time">320 ms (3414592)</td><td class="time">1078 ms (3414592)</td><td class="time">713 ms (3414592)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-zA-Z]+</td></tr><tr><td class="raptor3-pattern">[a-zA-Z]+</td></tr></table></td><td class="time">973 ms (3495761)</td><td class="time">1540 ms (3495761)</td><td class="time">2282 ms (3495761)</td><td class="time">2919 ms (3495761)</td><td class="time">2258 ms (3495761)</td><td class="time">333 ms (3495761)</td><td class="time">3301 ms (3495761)</td><td class="time">1134 ms (3495761)</td></tr>
     <tr><td class="pattern"><table><tr><td>[.\s]+</td></tr><tr><td class="raptor3-pattern">[:.:s]+</td></tr><tr><td class="raptor4-pattern">[.:s]+</td></tr></table></td><td class="time">915 ms (3430783)</td><td class="time">1047 ms (3430783)</td><td class="time">1888 ms (991813)</td><td class="time">2799 ms (3430783)</td><td class="time">2241 ms (3430783)</td><td class="time">379 ms (3430783)</td><td class="time">4203 ms (3430783)</td><td class="time">1395 ms (3430783)</td></tr>
     <tr><td class="pattern"><table><tr><td>([^\n]+)</td></tr><tr><td class="raptor3-pattern">&lt;[^\n]+&gt;</td></tr></table></td><td class="time">308 ms (314387)</td><td class="time">1179 ms (314387)</td><td class="time">1504 ms (314387)</td><td class="time">741 ms (314387)</td><td class="time">477 ms (314387)</td><td class="time">88 ms (314387)</td><td class="time">1267 ms (314387)</td><td class="time">597 ms (314387)</td></tr>
     <tr><td class="pattern"><table><tr><td>e</td></tr><tr><td class="raptor3-pattern">e</td></tr></table></td><td class="time">373 ms (1781425)</td><td class="time">453 ms (1781425)</td><td class="time">501 ms (1781425)</td><td class="time">1448 ms (1781425)</td><td class="time">1019 ms (1781425)</td><td class="time">135 ms (1781425)</td><td class="time">1757 ms (1781425)</td><td class="time">704 ms (1781425)</td></tr>
     <tr><td class="pattern"><table><tr><td>(((((e)))))</td></tr><tr><td class="raptor3-pattern">&lt;&lt;&lt;&lt;&lt;e&gt;&gt;&gt;&gt;&gt;</td></tr></table></td><td class="time">1289 ms (1781425)</td><td class="time">1153 ms (1781425)</td><td class="time">494 ms (1781425)</td><td class="time">1879 ms (1781425)</td><td class="time">1016 ms (1781425)</td><td class="time">210 ms (1781425)</td><td class="time">17686 ms (1781425)</td><td class="time">3485 ms (1781425)</td></tr>
     <tr><td class="pattern"><table><tr><td>((((((((((e))))))))))</td></tr><tr><td class="raptor3-pattern">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;e&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</td></tr></table></td><td class="time">2019 ms (1781425)</td><td class="time">1727 ms (1781425)</td><td class="time">494 ms (1781425)</td><td class="time">2121 ms (1781425)</td><td class="time">1037 ms (1781425)</td><td class="time">296 ms (1781425)</td><td class="time">48633 ms (1781425)</td><td class="time">5147 ms (1781425)</td></tr>
     <tr><td class="pattern"><table><tr><td>Twain</td></tr><tr><td class="raptor3-pattern">Twain</td></tr></table></td><td class="time">10 ms (2388)</td><td class="time">49 ms (2388)</td><td class="time">993 ms (2388)</td><td class="time">54 ms (2388)</td><td class="time">8 ms (2388)</td><td class="time">50 ms (2388)</td><td class="time">2383 ms (2388)</td><td class="time">614 ms (2388)</td></tr>
     <tr><td class="pattern"><table><tr><td>(Twain)</td></tr><tr><td class="raptor3-pattern">&lt;Twain&gt;</td></tr></table></td><td class="time">14 ms (2388)</td><td class="time">49 ms (2388)</td><td class="time">987 ms (2388)</td><td class="time">54 ms (2388)</td><td class="time">8 ms (2388)</td><td class="time">50 ms (2388)</td><td class="time">5299 ms (2388)</td><td class="time">999 ms (2388)</td></tr>
     <tr><td class="pattern"><table><tr><td>(?i)Twain</td></tr><tr><td class="raptor3-pattern">#*Twain</td></tr></table></td><td class="time">192 ms (2657)</td><td class="time">287 ms (2657)</td><td class="time">1253 ms (2657)</td><td class="time">345 ms (2657)</td><td class="time">179 ms (2657)</td><td class="time">52 ms (2657)</td><td class="time">2512 ms (2657)</td><td class="time">781 ms (2657)</td></tr>
     <tr><td class="pattern"><table><tr><td>((T|t)([wW])(a|A)i?I?([nN]))</td></tr><tr><td class="raptor3-pattern">&lt;&lt;T|t&gt;&lt;[wW]&gt;&lt;a|A&gt;i?I?&lt;[nN]&gt;&gt;</td></tr></table></td><td class="time">577 ms (2658)</td><td class="time">458 ms (2658)</td><td class="time">1750 ms (2658)</td><td class="time">361 ms (2658)</td><td class="time">179 ms (2658)</td><td class="time">76 ms (2658)</td><td class="time">17773 ms (2658)</td><td class="time">2565 ms (2658)</td></tr>
     <tr><td class="pattern"><table><tr><td>(T+([w]?(a{1}(i+(n*))))){1}</td></tr><tr><td class="raptor3-pattern">&lt;T+&lt;[w]?&lt;a{1}&lt;i+&lt;n*&gt;&gt;&gt;&gt;&gt;{1}</td></tr></table></td><td class="time">25 ms (2419)</td><td class="time">60 ms (2419)</td><td class="time">1175 ms (2419)</td><td class="time">164 ms (2419)</td><td class="time">8 ms (2419)</td><td class="time">7 ms (2419)</td><td class="time">12277 ms (2419)</td><td class="time">1025 ms (2419)</td></tr>
     <tr><td class="pattern"><table><tr><td>(?:T+(?:[w]?(?:a{1}(?:i+(?:n*))))){1}</td></tr><tr><td class="raptor3-pattern">(T+([w]?(a{1}(i+(n*))))){1}</td></tr></table></td><td class="time">22 ms (2419)</td><td class="time">60 ms (2419)</td><td class="time">1155 ms (2419)</td><td class="time">159 ms (2419)</td><td class="time">8 ms (2419)</td><td class="time">7 ms (2419)</td><td class="time">12149 ms (2419)</td><td class="time">943 ms (2419)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-z]shing</td></tr><tr><td class="raptor3-pattern">[a-z]shing</td></tr></table></td><td class="time">1456 ms (1877)</td><td class="time">2308 ms (1877)</td><td class="time">1559 ms (1877)</td><td class="time">50 ms (1877)</td><td class="time">290 ms (1877)</td><td class="time">48 ms (1877)</td><td class="time">5759 ms (1877)</td><td class="time">1319 ms (1877)</td></tr>
     <tr><td class="pattern"><table><tr><td>Huck[a-zA-Z]+|Saw[a-zA-Z]+</td></tr><tr><td class="raptor3-pattern">Huck[a-zA-Z]+|Saw[a-zA-Z]+</td></tr></table></td><td class="time">72 ms (396)</td><td class="time">75 ms (396)</td><td class="time">1569 ms (396)</td><td class="time">139 ms (396)</td><td class="time">139 ms (396)</td><td class="time">8 ms (396)</td><td class="time">6612 ms (396)</td><td class="time">1554 ms (396)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-q][^u-z]{13}x</td></tr><tr><td class="raptor3-pattern">[a-q][^u-z]{13}x</td></tr></table></td><td class="time">1731 ms (4929)</td><td class="time">6363 ms (4929)</td><td class="time">4285 ms (4929)</td><td class="time">157 ms (4929)</td><td class="time">569 ms (4929)</td><td class="time">5 ms (4929)</td><td class="time">11654 ms (4929)</td><td class="time">3600 ms (4929)</td></tr>
     <tr><td class="pattern"><table><tr><td>Tom|Sawyer|Huckleberry|Finn</td></tr><tr><td class="raptor3-pattern">Tom|Sawyer|Huckleberry|Finn</td></tr></table></td><td class="time">96 ms (3015)</td><td class="time">100 ms (3015)</td><td class="time">2749 ms (3015)</td><td class="time">161 ms (3015)</td><td class="time">143 ms (3015)</td><td class="time">84 ms (3015)</td><td class="time">10422 ms (3015)</td><td class="time">2803 ms (3015)</td></tr>
     <tr><td class="pattern"><table><tr><td>(Tom|Sawyer|Huckleberry|Finn)</td></tr><tr><td class="raptor3-pattern">&lt;Tom|Sawyer|Huckleberry|Finn&gt;</td></tr></table></td><td class="time">101 ms (3015)</td><td class="time">103 ms (3015)</td><td class="time">2767 ms (3015)</td><td class="time">162 ms (3015)</td><td class="time">143 ms (3015)</td><td class="time">82 ms (3015)</td><td class="time">19118 ms (3015)</td><td class="time">3172 ms (3015)</td></tr>
     <tr><td class="pattern"><table><tr><td>[hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo]</td></tr><tr><td class="raptor3-pattern">[hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo][hHeELlOo]</td></tr></table></td><td class="time">631 ms (534)</td><td class="time">879 ms (534)</td><td class="time">2914 ms (534)</td><td class="time">690 ms (534)</td><td class="time">263 ms (534)</td><td class="time">241 ms (534)</td><td class="time">12257 ms (534)</td><td class="time">1586 ms (534)</td></tr>
     <tr><td class="pattern"><table><tr><td>Tom.{10,25}river|river.{10,25}Tom</td></tr><tr><td class="raptor3-pattern">Tom([^(river|\n)]){10,25}river|river([^(Tom|\n)]){10,25}Tom</td></tr><tr><td class="raptor4-pattern">Tom(river|\n){10,25}#!river|river(Tom|\n){10,25}#!Tom</td></tr></table></td><td class="time">204 ms (2)</td><td class="time">248 ms (2)</td><td class="time">1762 ms (2)</td><td class="time">250 ms (2)</td><td class="time">238 ms (2)</td><td class="time">45 ms (2)</td><td class="time">12620 ms (2)</td><td class="time">1583 ms (2)</td></tr>
     <tr><td class="pattern"><table><tr><td>ing[^a-zA-Z]</td></tr><tr><td class="raptor3-pattern">ing[^a-zA-Z]</td></tr></table></td><td class="time">140 ms (85956)</td><td class="time">242 ms (85956)</td><td class="time">1104 ms (85956)</td><td class="time">141 ms (85956)</td><td class="time">113 ms (85956)</td><td class="time">54 ms (85956)</td><td class="time">3159 ms (85956)</td><td class="time">657 ms (85956)</td></tr>
     <tr><td class="pattern"><table><tr><td>[a-zA-Z]ing[^a-zA-Z]</td></tr><tr><td class="raptor3-pattern">[a-zA-Z]ing[^a-zA-Z]</td></tr></table></td><td class="time">1499 ms (85823)</td><td class="time">2383 ms (85823)</td><td class="time">1797 ms (85823)</td><td class="time">142 ms (85823)</td><td class="time">326 ms (85823)</td><td class="time">57 ms (85823)</td><td class="time">7701 ms (85823)</td><td class="time">1392 ms (85823)</td></tr>
     <tr><td class="pattern"><table><tr><td>([a-zA-Z]+ing)</td></tr><tr><td class="raptor3-pattern">&lt;([^(ing|:A)])+ing(([^(ing|:A)])*ing)*&gt;</td></tr><tr><td class="raptor4-pattern">&lt;(ing|:A)+#!ing((ing|:A)*#!ing)*&gt;</td></tr></table></td><td class="time">4018 ms (95863)</td><td class="time">5394 ms (95863)</td><td class="time">2096 ms (95863)</td><td class="time">2513 ms (95863)</td><td class="time">344 ms (95863)</td><td class="time">222 ms (95863)</td><td class="time">51980 ms (95863)</td><td class="time">7888 ms (95863)</td></tr>
     </tbody></table>
   #+END_HTML

   Para realizar la prueba solo descarga o clona este repositor, abre un
   terminal, ejecuta =make=. y luego =runtest=. (Puedes enviarme tu resultado,
   con informacion del equipo, tu mail y un nick).
